// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabajoPracticoFinal_Labo4.Models;

#nullable disable

namespace TrabajoPracticoFinal_Labo4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241125200055_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Afiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Dni")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Afiliados");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AfiliadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AfiliadoId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.TicketDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionPedido")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEstado")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TicketId")
                        .IsUnique();

                    b.ToTable("TicketDetalles");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Ticket", b =>
                {
                    b.HasOne("TrabajoPracticoFinal_Labo4.Models.Afiliado", "Afiliado")
                        .WithMany("Tickets")
                        .HasForeignKey("AfiliadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.TicketDetalle", b =>
                {
                    b.HasOne("TrabajoPracticoFinal_Labo4.Models.Estado", "Estado")
                        .WithMany("TicketDetalles")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrabajoPracticoFinal_Labo4.Models.Ticket", "Ticket")
                        .WithOne("TicketDetalle")
                        .HasForeignKey("TrabajoPracticoFinal_Labo4.Models.TicketDetalle", "TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Afiliado", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Estado", b =>
                {
                    b.Navigation("TicketDetalles");
                });

            modelBuilder.Entity("TrabajoPracticoFinal_Labo4.Models.Ticket", b =>
                {
                    b.Navigation("TicketDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
